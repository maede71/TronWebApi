// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/api/api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/api/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/api/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chp0cm9ucHJvdG9jb2wvYXBpL2FwaS5wcm90bxIIcHJvdG9jb2waD2NvcmUv",
            "VHJvbi5wcm90bxoTY29yZS9Db250cmFjdC5wcm90bxocZ29vZ2xlL2FwaS9h",
            "bm5vdGF0aW9ucy5wcm90byLcAgoGUmV0dXJuEg4KBnJlc3VsdBgBIAEoCBIs",
            "CgRjb2RlGAIgASgOMh4ucHJvdG9jb2wuUmV0dXJuLnJlc3BvbnNlX2NvZGUS",
            "DwoHbWVzc2FnZRgDIAEoDCKCAgoNcmVzcG9uc2VfY29kZRILCgdTVUNDRVNT",
            "EAASDAoIU0lHRVJST1IQARIbChdDT05UUkFDVF9WQUxJREFURV9FUlJPUhAC",
            "EhYKEkNPTlRSQUNUX0VYRV9FUlJPUhADEhIKDkJBTkRXSVRIX0VSUk9SEAQS",
            "GQoVRFVQX1RSQU5TQUNUSU9OX0VSUk9SEAUSDwoLVEFQT1NfRVJST1IQBhId",
            "ChlUT09fQklHX1RSQU5TQUNUSU9OX0VSUk9SEAcSIAocVFJBTlNBQ1RJT05f",
            "RVhQSVJBVElPTl9FUlJPUhAIEg8KC1NFUlZFUl9CVVNZEAkSDwoLT1RIRVJf",
            "RVJST1IQFCI3Cg5CbG9ja1JlZmVyZW5jZRIRCglibG9ja19udW0YASABKAMS",
            "EgoKYmxvY2tfaGFzaBgCIAEoDCIzCgtXaXRuZXNzTGlzdBIkCgl3aXRuZXNz",
            "ZXMYASADKAsyES5wcm90b2NvbC5XaXRuZXNzIkIKDkFzc2V0SXNzdWVMaXN0",
            "EjAKCmFzc2V0SXNzdWUYASADKAsyHC5wcm90b2NvbC5Bc3NldElzc3VlQ29u",
            "dHJhY3QiKwoJQmxvY2tMaXN0Eh4KBWJsb2NrGAEgAygLMg8ucHJvdG9jb2wu",
            "QmxvY2siPQoPVHJhbnNhY3Rpb25MaXN0EioKC3RyYW5zYWN0aW9uGAEgAygL",
            "MhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iKQoITm9kZUxpc3QSHQoFbm9kZXMY",
            "ASADKAsyDi5wcm90b2NvbC5Ob2RlIioKBE5vZGUSIgoHYWRkcmVzcxgBIAEo",
            "CzIRLnByb3RvY29sLkFkZHJlc3MiJQoHQWRkcmVzcxIMCgRob3N0GAEgASgM",
            "EgwKBHBvcnQYAiABKAUiDgoMRW1wdHlNZXNzYWdlIhwKDU51bWJlck1lc3Nh",
            "Z2USCwoDbnVtGAEgASgDIh0KDEJ5dGVzTWVzc2FnZRINCgV2YWx1ZRgBIAEo",
            "DCJFCgtUaW1lTWVzc2FnZRIbChNiZWdpbkluTWlsbGlzZWNvbmRzGAEgASgD",
            "EhkKEWVuZEluTWlsbGlzZWNvbmRzGAIgASgDIi4KCkJsb2NrTGltaXQSEAoI",
            "c3RhcnROdW0YASABKAMSDgoGZW5kTnVtGAIgASgDIjsKEFRyYW5zYWN0aW9u",
            "TGltaXQSFQoNdHJhbnNhY3Rpb25JZBgBIAEoDBIQCghsaW1pdE51bRgCIAEo",
            "AyJVChBBY2NvdW50UGFnaW5hdGVkEiIKB2FjY291bnQYASABKAsyES5wcm90",
            "b2NvbC5BY2NvdW50Eg4KBm9mZnNldBgCIAEoAxINCgVsaW1pdBgDIAEoAyJh",
            "ChRUaW1lUGFnaW5hdGVkTWVzc2FnZRIqCgt0aW1lTWVzc2FnZRgBIAEoCzIV",
            "LnByb3RvY29sLlRpbWVNZXNzYWdlEg4KBm9mZnNldBgCIAEoAxINCgVsaW1p",
            "dBgDIAEoAyKHAwoRQWNjb3VudE5ldE1lc3NhZ2USEwoLZnJlZU5ldFVzZWQY",
            "ASABKAMSFAoMZnJlZU5ldExpbWl0GAIgASgDEg8KB05ldFVzZWQYAyABKAMS",
            "EAoITmV0TGltaXQYBCABKAMSQwoMYXNzZXROZXRVc2VkGAUgAygLMi0ucHJv",
            "dG9jb2wuQWNjb3VudE5ldE1lc3NhZ2UuQXNzZXROZXRVc2VkRW50cnkSRQoN",
            "YXNzZXROZXRMaW1pdBgGIAMoCzIuLnByb3RvY29sLkFjY291bnROZXRNZXNz",
            "YWdlLkFzc2V0TmV0TGltaXRFbnRyeRIVCg1Ub3RhbE5ldExpbWl0GAcgASgD",
            "EhYKDlRvdGFsTmV0V2VpZ2h0GAggASgDGjMKEUFzc2V0TmV0VXNlZEVudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEaNAoSQXNzZXROZXRM",
            "aW1pdEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEytB8K",
            "BldhbGxldBJnCgpHZXRBY2NvdW50EhEucHJvdG9jb2wuQWNjb3VudBoRLnBy",
            "b3RvY29sLkFjY291bnQiM4LT5JMCLSISL3dhbGxldC9nZXRhY2NvdW50OgEq",
            "WhQSEi93YWxsZXQvZ2V0YWNjb3VudBKJAQoRQ3JlYXRlVHJhbnNhY3Rpb24S",
            "Gi5wcm90b2NvbC5UcmFuc2ZlckNvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb24iQYLT5JMCOyIZL3dhbGxldC9jcmVhdGV0cmFuc2FjdGlvbjoBKlob",
            "Ehkvd2FsbGV0L2NyZWF0ZXRyYW5zYWN0aW9uEogBChRCcm9hZGNhc3RUcmFu",
            "c2FjdGlvbhIVLnByb3RvY29sLlRyYW5zYWN0aW9uGhAucHJvdG9jb2wuUmV0",
            "dXJuIkeC0+STAkEiHC93YWxsZXQvYnJvYWRjYXN0dHJhbnNhY3Rpb246ASpa",
            "HhIcL3dhbGxldC9icm9hZGNhc3R0cmFuc2FjdGlvbhKCAQoNVXBkYXRlQWNj",
            "b3VudBIfLnByb3RvY29sLkFjY291bnRVcGRhdGVDb250cmFjdBoVLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uIjmC0+STAjMiFS93YWxsZXQvdXBkYXRlYWNjb3Vu",
            "dDoBKloXEhUvd2FsbGV0L3VwZGF0ZWFjY291bnQSjwEKElZvdGVXaXRuZXNz",
            "QWNjb3VudBIdLnByb3RvY29sLlZvdGVXaXRuZXNzQ29udHJhY3QaFS5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbiJDgtPkkwI9Ihovd2FsbGV0L3ZvdGV3aXRuZXNz",
            "YWNjb3VudDoBKlocEhovd2FsbGV0L3ZvdGV3aXRuZXNzYWNjb3VudBKIAQoQ",
            "Q3JlYXRlQXNzZXRJc3N1ZRIcLnByb3RvY29sLkFzc2V0SXNzdWVDb250cmFj",
            "dBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIj+C0+STAjkiGC93YWxsZXQvY3Jl",
            "YXRlYXNzZXRpc3N1ZToBKloaEhgvd2FsbGV0L2NyZWF0ZWFzc2V0aXNzdWUS",
            "ggEKDVVwZGF0ZVdpdG5lc3MSHy5wcm90b2NvbC5XaXRuZXNzVXBkYXRlQ29u",
            "dHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0",
            "L3VwZGF0ZXdpdG5lc3M6ASpaFxIVL3dhbGxldC91cGRhdGV3aXRuZXNzEoIB",
            "Cg1DcmVhdGVBY2NvdW50Eh8ucHJvdG9jb2wuQWNjb3VudENyZWF0ZUNvbnRy",
            "YWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC9j",
            "cmVhdGVhY2NvdW50OgEqWhcSFS93YWxsZXQvY3JlYXRlYWNjb3VudBKCAQoN",
            "Q3JlYXRlV2l0bmVzcxIfLnByb3RvY29sLldpdG5lc3NDcmVhdGVDb250cmFj",
            "dBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIjmC0+STAjMiFS93YWxsZXQvY3Jl",
            "YXRld2l0bmVzczoBKloXEhUvd2FsbGV0L2NyZWF0ZXdpdG5lc3MSggEKDVRy",
            "YW5zZmVyQXNzZXQSHy5wcm90b2NvbC5UcmFuc2ZlckFzc2V0Q29udHJhY3Qa",
            "FS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0L3RyYW5z",
            "ZmVyYXNzZXQ6ASpaFxIVL3dhbGxldC90cmFuc2ZlcmFzc2V0EqIBChVQYXJ0",
            "aWNpcGF0ZUFzc2V0SXNzdWUSJy5wcm90b2NvbC5QYXJ0aWNpcGF0ZUFzc2V0",
            "SXNzdWVDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIkmC0+STAkMi",
            "HS93YWxsZXQvcGFydGljaXBhdGVhc3NldGlzc3VlOgEqWh8SHS93YWxsZXQv",
            "cGFydGljaXBhdGVhc3NldGlzc3VlEoIBCg1GcmVlemVCYWxhbmNlEh8ucHJv",
            "dG9jb2wuRnJlZXplQmFsYW5jZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb24iOYLT5JMCMyIVL3dhbGxldC9mcmVlemViYWxhbmNlOgEqWhcSFS93",
            "YWxsZXQvZnJlZXplYmFsYW5jZRKKAQoPVW5mcmVlemVCYWxhbmNlEiEucHJv",
            "dG9jb2wuVW5mcmVlemVCYWxhbmNlQ29udHJhY3QaFS5wcm90b2NvbC5UcmFu",
            "c2FjdGlvbiI9gtPkkwI3Ihcvd2FsbGV0L3VuZnJlZXplYmFsYW5jZToBKloZ",
            "Ehcvd2FsbGV0L3VuZnJlZXplYmFsYW5jZRKCAQoNVW5mcmVlemVBc3NldBIf",
            "LnByb3RvY29sLlVuZnJlZXplQXNzZXRDb250cmFjdBoVLnByb3RvY29sLlRy",
            "YW5zYWN0aW9uIjmC0+STAjMiFS93YWxsZXQvdW5mcmVlemVhc3NldDoBKloX",
            "EhUvd2FsbGV0L3VuZnJlZXplYXNzZXQSigEKD1dpdGhkcmF3QmFsYW5jZRIh",
            "LnByb3RvY29sLldpdGhkcmF3QmFsYW5jZUNvbnRyYWN0GhUucHJvdG9jb2wu",
            "VHJhbnNhY3Rpb24iPYLT5JMCNyIXL3dhbGxldC93aXRoZHJhd2JhbGFuY2U6",
            "ASpaGRIXL3dhbGxldC93aXRoZHJhd2JhbGFuY2USegoLVXBkYXRlQXNzZXQS",
            "HS5wcm90b2NvbC5VcGRhdGVBc3NldENvbnRyYWN0GhUucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb24iNYLT5JMCLyITL3dhbGxldC91cGRhdGVhc3NldDoBKloVEhMv",
            "d2FsbGV0L3VwZGF0ZWFzc2V0EmoKCUxpc3ROb2RlcxIWLnByb3RvY29sLkVt",
            "cHR5TWVzc2FnZRoSLnByb3RvY29sLk5vZGVMaXN0IjGC0+STAisiES93YWxs",
            "ZXQvbGlzdG5vZGVzOgEqWhMSES93YWxsZXQvbGlzdG5vZGVzEpIBChZHZXRB",
            "c3NldElzc3VlQnlBY2NvdW50EhEucHJvdG9jb2wuQWNjb3VudBoYLnByb3Rv",
            "Y29sLkFzc2V0SXNzdWVMaXN0IkuC0+STAkUiHi93YWxsZXQvZ2V0YXNzZXRp",
            "c3N1ZWJ5YWNjb3VudDoBKlogEh4vd2FsbGV0L2dldGFzc2V0aXNzdWVieWFj",
            "Y291bnQSegoNR2V0QWNjb3VudE5ldBIRLnByb3RvY29sLkFjY291bnQaGy5w",
            "cm90b2NvbC5BY2NvdW50TmV0TWVzc2FnZSI5gtPkkwIzIhUvd2FsbGV0L2dl",
            "dGFjY291bnRuZXQ6ASpaFxIVL3dhbGxldC9nZXRhY2NvdW50bmV0EpIBChNH",
            "ZXRBc3NldElzc3VlQnlOYW1lEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhwu",
            "cHJvdG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0IkWC0+STAj8iGy93YWxsZXQv",
            "Z2V0YXNzZXRpc3N1ZWJ5bmFtZToBKlodEhsvd2FsbGV0L2dldGFzc2V0aXNz",
            "dWVieW5hbWUSbQoLR2V0Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3Nh",
            "Z2UaDy5wcm90b2NvbC5CbG9jayI1gtPkkwIvIhMvd2FsbGV0L2dldG5vd2Js",
            "b2NrOgEqWhUSEy93YWxsZXQvZ2V0bm93YmxvY2sSdAoNR2V0QmxvY2tCeU51",
            "bRIXLnByb3RvY29sLk51bWJlck1lc3NhZ2UaDy5wcm90b2NvbC5CbG9jayI5",
            "gtPkkwIzIhUvd2FsbGV0L2dldGJsb2NrYnludW06ASpaFxIVL3dhbGxldC9n",
            "ZXRibG9ja2J5bnVtEnAKDEdldEJsb2NrQnlJZBIWLnByb3RvY29sLkJ5dGVz",
            "TWVzc2FnZRoPLnByb3RvY29sLkJsb2NrIjeC0+STAjEiFC93YWxsZXQvZ2V0",
            "YmxvY2tieWlkOgEqWhYSFC93YWxsZXQvZ2V0YmxvY2tieWlkEocBChNHZXRC",
            "bG9ja0J5TGltaXROZXh0EhQucHJvdG9jb2wuQmxvY2tMaW1pdBoTLnByb3Rv",
            "Y29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2FsbGV0L2dldGJsb2NrYnlsaW1p",
            "dG5leHQ6ASpaHRIbL3dhbGxldC9nZXRibG9ja2J5bGltaXRuZXh0EooBChNH",
            "ZXRCbG9ja0J5TGF0ZXN0TnVtEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoT",
            "LnByb3RvY29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2FsbGV0L2dldGJsb2Nr",
            "YnlsYXRlc3RudW06ASpaHRIbL3dhbGxldC9nZXRibG9ja2J5bGF0ZXN0bnVt",
            "EogBChJHZXRUcmFuc2FjdGlvbkJ5SWQSFi5wcm90b2NvbC5CeXRlc01lc3Nh",
            "Z2UaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiJDgtPkkwI9Ihovd2FsbGV0L2dl",
            "dHRyYW5zYWN0aW9uYnlpZDoBKlocEhovd2FsbGV0L2dldHRyYW5zYWN0aW9u",
            "YnlpZBJ5Cg1MaXN0V2l0bmVzc2VzEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdl",
            "GhUucHJvdG9jb2wuV2l0bmVzc0xpc3QiOYLT5JMCMyIVL3dhbGxldC9saXN0",
            "d2l0bmVzc2VzOgEqWhcSFS93YWxsZXQvbGlzdHdpdG5lc3NlcxKIAQoRR2V0",
            "QXNzZXRJc3N1ZUxpc3QSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaGC5wcm90",
            "b2NvbC5Bc3NldElzc3VlTGlzdCJBgtPkkwI7Ihkvd2FsbGV0L2dldGFzc2V0",
            "aXNzdWVsaXN0OgEqWhsSGS93YWxsZXQvZ2V0YXNzZXRpc3N1ZWxpc3QShAEK",
            "EFRvdGFsVHJhbnNhY3Rpb24SFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFy5w",
            "cm90b2NvbC5OdW1iZXJNZXNzYWdlIj+C0+STAjkiGC93YWxsZXQvdG90YWx0",
            "cmFuc2FjdGlvbjoBKloaEhgvd2FsbGV0L3RvdGFsdHJhbnNhY3Rpb24SlgEK",
            "FkdldE5leHRNYWludGVuYW5jZVRpbWUSFi5wcm90b2NvbC5FbXB0eU1lc3Nh",
            "Z2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdlIkuC0+STAkUiHi93YWxsZXQv",
            "Z2V0bmV4dG1haW50ZW5hbmNldGltZToBKlogEh4vd2FsbGV0L2dldG5leHRt",
            "YWludGVuYW5jZXRpbWUytgUKDldhbGxldFNvbGlkaXR5EncKCkdldEFjY291",
            "bnQSES5wcm90b2NvbC5BY2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCJDgtPk",
            "kwI9Ihovd2FsbGV0c29saWRpdHkvZ2V0YWNjb3VudDoBKlocEhovd2FsbGV0",
            "c29saWRpdHkvZ2V0YWNjb3VudBKJAQoNTGlzdFdpdG5lc3NlcxIWLnByb3Rv",
            "Y29sLkVtcHR5TWVzc2FnZRoVLnByb3RvY29sLldpdG5lc3NMaXN0IkmC0+ST",
            "AkMiHS93YWxsZXRzb2xpZGl0eS9saXN0d2l0bmVzc2VzOgEqWh8SHS93YWxs",
            "ZXRzb2xpZGl0eS9saXN0d2l0bmVzc2VzEpgBChFHZXRBc3NldElzc3VlTGlz",
            "dBIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoYLnByb3RvY29sLkFzc2V0SXNz",
            "dWVMaXN0IlGC0+STAksiIS93YWxsZXRzb2xpZGl0eS9nZXRhc3NldGlzc3Vl",
            "bGlzdDoBKlojEiEvd2FsbGV0c29saWRpdHkvZ2V0YXNzZXRpc3N1ZWxpc3QS",
            "fQoLR2V0Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaDy5wcm90",
            "b2NvbC5CbG9jayJFgtPkkwI/Ihsvd2FsbGV0c29saWRpdHkvZ2V0bm93Ymxv",
            "Y2s6ASpaHRIbL3dhbGxldHNvbGlkaXR5L2dldG5vd2Jsb2NrEoQBCg1HZXRC",
            "bG9ja0J5TnVtEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoPLnByb3RvY29s",
            "LkJsb2NrIkmC0+STAkMiHS93YWxsZXRzb2xpZGl0eS9nZXRibG9ja2J5bnVt",
            "OgEqWh8SHS93YWxsZXRzb2xpZGl0eS9nZXRibG9ja2J5bnVtMvMCCg9XYWxs",
            "ZXRFeHRlbnNpb24SsQEKF0dldFRyYW5zYWN0aW9uc0Zyb21UaGlzEhoucHJv",
            "dG9jb2wuQWNjb3VudFBhZ2luYXRlZBoZLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "TGlzdCJfgtPkkwJZIigvd2FsbGV0ZXh0ZW5zaW9uL2dldHRyYW5zYWN0aW9u",
            "c2Zyb210aGlzOgEqWioSKC93YWxsZXRleHRlbnNpb24vZ2V0dHJhbnNhY3Rp",
            "b25zZnJvbXRoaXMSqwEKFUdldFRyYW5zYWN0aW9uc1RvVGhpcxIaLnByb3Rv",
            "Y29sLkFjY291bnRQYWdpbmF0ZWQaGS5wcm90b2NvbC5UcmFuc2FjdGlvbkxp",
            "c3QiW4LT5JMCVSImL3dhbGxldGV4dGVuc2lvbi9nZXR0cmFuc2FjdGlvbnN0",
            "b3RoaXM6ASpaKBImL3dhbGxldGV4dGVuc2lvbi9nZXR0cmFuc2FjdGlvbnN0",
            "b3RoaXMymQIKCERhdGFiYXNlEkcKEWdldEJsb2NrUmVmZXJlbmNlEhYucHJv",
            "dG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQmxvY2tSZWZlcmVuY2Ui",
            "ABJNChRHZXREeW5hbWljUHJvcGVydGllcxIWLnByb3RvY29sLkVtcHR5TWVz",
            "c2FnZRobLnByb3RvY29sLkR5bmFtaWNQcm9wZXJ0aWVzIgASOAoLR2V0Tm93",
            "QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaDy5wcm90b2NvbC5CbG9j",
            "ayIAEjsKDUdldEJsb2NrQnlOdW0SFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdl",
            "Gg8ucHJvdG9jb2wuQmxvY2siADIJCgdOZXR3b3JrQlUKDG9yZy50cm9uLmFw",
            "aUIHR3JwY0FQSVooZ2l0aHViLmNvbS90cm9ucHJvdG9jb2wvZ3JwYy1nYXRl",
            "d2F5L2FwaaoCEVRyb24uTmV0LlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.TronReflection.Descriptor, global::Tron.Net.Protocol.ContractReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Return), global::Tron.Net.Protocol.Return.Parser, new[]{ "Result", "Code", "Message" }, null, new[]{ typeof(global::Tron.Net.Protocol.Return.Types.response_code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockReference), global::Tron.Net.Protocol.BlockReference.Parser, new[]{ "BlockNum", "BlockHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WitnessList), global::Tron.Net.Protocol.WitnessList.Parser, new[]{ "Witnesses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AssetIssueList), global::Tron.Net.Protocol.AssetIssueList.Parser, new[]{ "AssetIssue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockList), global::Tron.Net.Protocol.BlockList.Parser, new[]{ "Block" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionList), global::Tron.Net.Protocol.TransactionList.Parser, new[]{ "Transaction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NodeList), global::Tron.Net.Protocol.NodeList.Parser, new[]{ "Nodes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Node), global::Tron.Net.Protocol.Node.Parser, new[]{ "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Address), global::Tron.Net.Protocol.Address.Parser, new[]{ "Host", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EmptyMessage), global::Tron.Net.Protocol.EmptyMessage.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NumberMessage), global::Tron.Net.Protocol.NumberMessage.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BytesMessage), global::Tron.Net.Protocol.BytesMessage.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TimeMessage), global::Tron.Net.Protocol.TimeMessage.Parser, new[]{ "BeginInMilliseconds", "EndInMilliseconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockLimit), global::Tron.Net.Protocol.BlockLimit.Parser, new[]{ "StartNum", "EndNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionLimit), global::Tron.Net.Protocol.TransactionLimit.Parser, new[]{ "TransactionId", "LimitNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountPaginated), global::Tron.Net.Protocol.AccountPaginated.Parser, new[]{ "Account", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TimePaginatedMessage), global::Tron.Net.Protocol.TimePaginatedMessage.Parser, new[]{ "TimeMessage", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountNetMessage), global::Tron.Net.Protocol.AccountNetMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Return : pb::IMessage<Return> {
    private static readonly pb::MessageParser<Return> _parser = new pb::MessageParser<Return>(() => new Return());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Return> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return(Return other) : this() {
      result_ = other.result_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return Clone() {
      return new Return(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Tron.Net.Protocol.Return.Types.response_code code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Return.Types.response_code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Return);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Return other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Return other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 16: {
            code_ = (global::Tron.Net.Protocol.Return.Types.response_code) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Return message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum response_code {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        /// error in signature
        /// </summary>
        [pbr::OriginalName("SIGERROR")] Sigerror = 1,
        [pbr::OriginalName("CONTRACT_VALIDATE_ERROR")] ContractValidateError = 2,
        [pbr::OriginalName("CONTRACT_EXE_ERROR")] ContractExeError = 3,
        [pbr::OriginalName("BANDWITH_ERROR")] BandwithError = 4,
        [pbr::OriginalName("DUP_TRANSACTION_ERROR")] DupTransactionError = 5,
        [pbr::OriginalName("TAPOS_ERROR")] TaposError = 6,
        [pbr::OriginalName("TOO_BIG_TRANSACTION_ERROR")] TooBigTransactionError = 7,
        [pbr::OriginalName("TRANSACTION_EXPIRATION_ERROR")] TransactionExpirationError = 8,
        [pbr::OriginalName("SERVER_BUSY")] ServerBusy = 9,
        [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
      }

    }
    #endregion

  }

  public sealed partial class BlockReference : pb::IMessage<BlockReference> {
    private static readonly pb::MessageParser<BlockReference> _parser = new pb::MessageParser<BlockReference>(() => new BlockReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference(BlockReference other) : this() {
      blockNum_ = other.blockNum_;
      blockHash_ = other.blockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference Clone() {
      return new BlockReference(this);
    }

    /// <summary>Field number for the "block_num" field.</summary>
    public const int BlockNumFieldNumber = 1;
    private long blockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNum {
      get { return blockNum_; }
      set {
        blockNum_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 2;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockNum != other.BlockNum) return false;
      if (BlockHash != other.BlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockNum != 0L) hash ^= BlockNum.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlockNum);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNum);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockReference other) {
      if (other == null) {
        return;
      }
      if (other.BlockNum != 0L) {
        BlockNum = other.BlockNum;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockNum = input.ReadInt64();
            break;
          }
          case 18: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessList : pb::IMessage<WitnessList> {
    private static readonly pb::MessageParser<WitnessList> _parser = new pb::MessageParser<WitnessList>(() => new WitnessList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList(WitnessList other) : this() {
      witnesses_ = other.witnesses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList Clone() {
      return new WitnessList(this);
    }

    /// <summary>Field number for the "witnesses" field.</summary>
    public const int WitnessesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Witness> _repeated_witnesses_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Witness.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Witness> witnesses_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Witness>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Witness> Witnesses {
      get { return witnesses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!witnesses_.Equals(other.witnesses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= witnesses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      witnesses_.WriteTo(output, _repeated_witnesses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += witnesses_.CalculateSize(_repeated_witnesses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessList other) {
      if (other == null) {
        return;
      }
      witnesses_.Add(other.witnesses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            witnesses_.AddEntriesFrom(input, _repeated_witnesses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetIssueList : pb::IMessage<AssetIssueList> {
    private static readonly pb::MessageParser<AssetIssueList> _parser = new pb::MessageParser<AssetIssueList>(() => new AssetIssueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetIssueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList(AssetIssueList other) : this() {
      assetIssue_ = other.assetIssue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList Clone() {
      return new AssetIssueList(this);
    }

    /// <summary>Field number for the "assetIssue" field.</summary>
    public const int AssetIssueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.AssetIssueContract> _repeated_assetIssue_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.AssetIssueContract.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract> assetIssue_ = new pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract> AssetIssue {
      get { return assetIssue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetIssueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetIssueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assetIssue_.Equals(other.assetIssue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assetIssue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assetIssue_.WriteTo(output, _repeated_assetIssue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assetIssue_.CalculateSize(_repeated_assetIssue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetIssueList other) {
      if (other == null) {
        return;
      }
      assetIssue_.Add(other.assetIssue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assetIssue_.AddEntriesFrom(input, _repeated_assetIssue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockList : pb::IMessage<BlockList> {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList(BlockList other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Block> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Block.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Block> block_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Block> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionList : pb::IMessage<TransactionList> {
    private static readonly pb::MessageParser<TransactionList> _parser = new pb::MessageParser<TransactionList>(() => new TransactionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList(TransactionList other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList Clone() {
      return new TransactionList(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Transaction> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Transaction> transaction_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Transaction> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionList other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node list
  /// </summary>
  public sealed partial class NodeList : pb::IMessage<NodeList> {
    private static readonly pb::MessageParser<NodeList> _parser = new pb::MessageParser<NodeList>(() => new NodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList(NodeList other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList Clone() {
      return new NodeList(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Node.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Node> nodes_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Node> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeList other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node
  /// </summary>
  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Tron.Net.Protocol.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Tron.Net.Protocol.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::Tron.Net.Protocol.Address();
            }
            input.ReadMessage(address_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node address
  /// </summary>
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private pb::ByteString host_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadBytes();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyMessage : pb::IMessage<EmptyMessage> {
    private static readonly pb::MessageParser<EmptyMessage> _parser = new pb::MessageParser<EmptyMessage>(() => new EmptyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage(EmptyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage Clone() {
      return new EmptyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NumberMessage : pb::IMessage<NumberMessage> {
    private static readonly pb::MessageParser<NumberMessage> _parser = new pb::MessageParser<NumberMessage>(() => new NumberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage(NumberMessage other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage Clone() {
      return new NumberMessage(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumberMessage other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BytesMessage : pb::IMessage<BytesMessage> {
    private static readonly pb::MessageParser<BytesMessage> _parser = new pb::MessageParser<BytesMessage>(() => new BytesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BytesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage(BytesMessage other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage Clone() {
      return new BytesMessage(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BytesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BytesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BytesMessage other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeMessage : pb::IMessage<TimeMessage> {
    private static readonly pb::MessageParser<TimeMessage> _parser = new pb::MessageParser<TimeMessage>(() => new TimeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage(TimeMessage other) : this() {
      beginInMilliseconds_ = other.beginInMilliseconds_;
      endInMilliseconds_ = other.endInMilliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage Clone() {
      return new TimeMessage(this);
    }

    /// <summary>Field number for the "beginInMilliseconds" field.</summary>
    public const int BeginInMillisecondsFieldNumber = 1;
    private long beginInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BeginInMilliseconds {
      get { return beginInMilliseconds_; }
      set {
        beginInMilliseconds_ = value;
      }
    }

    /// <summary>Field number for the "endInMilliseconds" field.</summary>
    public const int EndInMillisecondsFieldNumber = 2;
    private long endInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndInMilliseconds {
      get { return endInMilliseconds_; }
      set {
        endInMilliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeginInMilliseconds != other.BeginInMilliseconds) return false;
      if (EndInMilliseconds != other.EndInMilliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BeginInMilliseconds != 0L) hash ^= BeginInMilliseconds.GetHashCode();
      if (EndInMilliseconds != 0L) hash ^= EndInMilliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BeginInMilliseconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BeginInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeMessage other) {
      if (other == null) {
        return;
      }
      if (other.BeginInMilliseconds != 0L) {
        BeginInMilliseconds = other.BeginInMilliseconds;
      }
      if (other.EndInMilliseconds != 0L) {
        EndInMilliseconds = other.EndInMilliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BeginInMilliseconds = input.ReadInt64();
            break;
          }
          case 16: {
            EndInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLimit : pb::IMessage<BlockLimit> {
    private static readonly pb::MessageParser<BlockLimit> _parser = new pb::MessageParser<BlockLimit>(() => new BlockLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit(BlockLimit other) : this() {
      startNum_ = other.startNum_;
      endNum_ = other.endNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit Clone() {
      return new BlockLimit(this);
    }

    /// <summary>Field number for the "startNum" field.</summary>
    public const int StartNumFieldNumber = 1;
    private long startNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartNum {
      get { return startNum_; }
      set {
        startNum_ = value;
      }
    }

    /// <summary>Field number for the "endNum" field.</summary>
    public const int EndNumFieldNumber = 2;
    private long endNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndNum {
      get { return endNum_; }
      set {
        endNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartNum != other.StartNum) return false;
      if (EndNum != other.EndNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartNum != 0L) hash ^= StartNum.GetHashCode();
      if (EndNum != 0L) hash ^= EndNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartNum);
      }
      if (EndNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartNum);
      }
      if (EndNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLimit other) {
      if (other == null) {
        return;
      }
      if (other.StartNum != 0L) {
        StartNum = other.StartNum;
      }
      if (other.EndNum != 0L) {
        EndNum = other.EndNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartNum = input.ReadInt64();
            break;
          }
          case 16: {
            EndNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionLimit : pb::IMessage<TransactionLimit> {
    private static readonly pb::MessageParser<TransactionLimit> _parser = new pb::MessageParser<TransactionLimit>(() => new TransactionLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit(TransactionLimit other) : this() {
      transactionId_ = other.transactionId_;
      limitNum_ = other.limitNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit Clone() {
      return new TransactionLimit(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private pb::ByteString transactionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limitNum" field.</summary>
    public const int LimitNumFieldNumber = 2;
    private long limitNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LimitNum {
      get { return limitNum_; }
      set {
        limitNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (LimitNum != other.LimitNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (LimitNum != 0L) hash ^= LimitNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionId);
      }
      if (LimitNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LimitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (LimitNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LimitNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionLimit other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.LimitNum != 0L) {
        LimitNum = other.LimitNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 16: {
            LimitNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPaginated : pb::IMessage<AccountPaginated> {
    private static readonly pb::MessageParser<AccountPaginated> _parser = new pb::MessageParser<AccountPaginated>(() => new AccountPaginated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPaginated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated(AccountPaginated other) : this() {
      account_ = other.account_ != null ? other.account_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated Clone() {
      return new AccountPaginated(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Tron.Net.Protocol.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPaginated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPaginated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPaginated other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Tron.Net.Protocol.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Tron.Net.Protocol.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePaginatedMessage : pb::IMessage<TimePaginatedMessage> {
    private static readonly pb::MessageParser<TimePaginatedMessage> _parser = new pb::MessageParser<TimePaginatedMessage>(() => new TimePaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage(TimePaginatedMessage other) : this() {
      timeMessage_ = other.timeMessage_ != null ? other.timeMessage_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage Clone() {
      return new TimePaginatedMessage(this);
    }

    /// <summary>Field number for the "timeMessage" field.</summary>
    public const int TimeMessageFieldNumber = 1;
    private global::Tron.Net.Protocol.TimeMessage timeMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TimeMessage TimeMessage {
      get { return timeMessage_; }
      set {
        timeMessage_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeMessage, other.TimeMessage)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeMessage_ != null) hash ^= TimeMessage.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeMessage);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeMessage);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.timeMessage_ != null) {
        if (timeMessage_ == null) {
          timeMessage_ = new global::Tron.Net.Protocol.TimeMessage();
        }
        TimeMessage.MergeFrom(other.TimeMessage);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeMessage_ == null) {
              timeMessage_ = new global::Tron.Net.Protocol.TimeMessage();
            }
            input.ReadMessage(timeMessage_);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountNetMessage : pb::IMessage<AccountNetMessage> {
    private static readonly pb::MessageParser<AccountNetMessage> _parser = new pb::MessageParser<AccountNetMessage>(() => new AccountNetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountNetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage(AccountNetMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage Clone() {
      return new AccountNetMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountNetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountNetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountNetMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
